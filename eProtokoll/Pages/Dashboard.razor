@page "/dashboard"
@inject NavigationManager Navigation
@inject IAuthenticationServices _auth
@inject IApplicationService _appService
@inject NavigationManager _navmanager
@inject IJavascriptCaller jscaller

@using Microsoft.AspNetCore.Components.Authorization
<AuthorizeView>
    <Authorized Context="Auth">
        <RadzenCard>
            <div class="row">
                <div class="col-10">
                    <h3>Dashboard</h3>
                </div>
                <div class="col-2">
                    @if (Auth.User.IsInRole("Punojes"))
                    {


                        <RadzenButton Click=@(args => GoToNewApplicationComponent()) Icon="add_circle_outline" />
                    }
                </div>
            </div>
            @if (apps != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Aplikimi</th>
                            <th scope="col">Data</th>
                            <th scope="col">Statusi</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var a in apps)
                        {
                            <tr>
                                <th scope="row">1</th>
                                <td>@a.appName</td>
                                <td>@a.appDate</td>
                                <td>@a.status</td>
                                <td style="cursor:pointer; text-align:center">
                                    <RadzenIcon Icon="open_in_new" @onclick="(()=>GoToDetails(a.appId))" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }


            @*<RadzenDataGrid AllowFiltering="false"
                                AllowPaging="true" PageSize="5" AllowSorting="false" Data="@data" TItem="ApplicationRequestDto"
                                IsLoading="@isLoading"
                                Count="@count">
                    <Columns>
                        <RadzenDataGridColumn TItem="ApplicationRequestDto" Property="EmployeeID" Title="Emri i aplikimit" Type="typeof(string)">
                            <Template>
                                @context.appName
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="ApplicationRequestDto" Property="FirstName" Title="Data e aplikimit" Type="typeof(DateTime)">
                            <Template>
                                @context.appDate
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="ApplicationRequestDto" Property="LastName" Title="Statusi" Type="typeof(string)">
                            <Template>
                                @context.status
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="ApplicationRequestDto" Sortable="false" Filterable="false">
                            <Template>
                                <div style="cursor:pointer; text-align:center">
                                    <RadzenIcon Icon="open_in_new"  @onclick="(()=>GoToDetails(context.appId))" />
                                </div>

                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>*@


        </RadzenCard>
    </Authorized>
</AuthorizeView>

@*</Authorized>
        <NotAuthorized>
            <h1>Authentication Failure!</h1>
            <p>You're not signed in.</p>
        </NotAuthorized>
    </AuthorizeView>*@

@code {

    private List<ApplicationRequestDto> apps = new();
    IEnumerable<ApplicationRequestDto> data;
    int count;
    bool isLoading;

    protected override async Task OnInitializedAsync()
    {

        apps = await _appService.GetApplicationAsync();

        data = apps.AsODataEnumerable();
        count = apps.Count;
        isLoading = false;
    }

    void GoToDetails(int id)
    {
        _navmanager.NavigateTo($"/appDetails/{id}");
    }
    void GoToNewApplicationComponent()
    {
        _navmanager.NavigateTo("/newApplication");
    }
    async void show()
    {
        await jscaller.Print(3);
    }
}
