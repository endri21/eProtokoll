@page "/newApplication"
@inject IApplicationService _appService
@inject IUserRepository _userService
@inject NavigationManager _navmanager
@inject IToastService toastService

<RadzenCard>
    <EditForm Model="requestDto">
        <div class="form-group row">
            <label for="inputEmail3" class="col-sm-2 col-form-label">Application Name</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="inputEmail3" @bind-value="requestDto.appName">
            </div>
        </div>
        <div class="form-group row">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Application Date</label>
            <div class="col-sm-10">
                <input type="date" class="form-control" @bind-value="@requestDto.appDate">
            </div>
        </div>
        <div class="form-group row">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Institucioni</label>
            <div class="col-sm-10">

                <select class="custom-select mr-sm-2">
                    <option value="1">Institucioni A</option>
                    <option value="2">Institucioni B</option>
                    <option value="3">Institucioni C</option>
                </select>

            </div>
        </div>
        <div class="form-group row">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Tipi</label>
            <div class="col-sm-10">
                <select class="custom-select mr-sm-2">
                    <option value="2">Tipi A</option>
                    <option value="3">Tipi B</option>
                    <option value="4">Tipi C</option>
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Perdoruesi</label>
            <div class="col-sm-10">
                <select class="custom-select mr-sm-2" @bind="requestDto.to">
                    <option value="0">Zgjidhni</option>
                    @foreach (var usr in users)
                    {
                        <option value="@usr.id">@usr.name @usr.lastName</option>
                    }
                </select>
            </div>
        </div>
        <div class="input-group">
            <div class="custom-file">
                <InputFile OnChange="@LoadFiles" class="custom-file-input" multiple />
                <label class="custom-file-label" for="inputGroupFile04">@FileName</label>
            </div>
            <div class="input-group-append">
                <button class="btn btn-info" @onclick="@AddDocument" type="button">+</button>
            </div>
        </div>
        <div class="input-group">
            @if (documentToShow.Count > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">emri i dokumentit</th>
                            <th scope="col"></th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var i in documentToShow)
                        {
                            var nr = 1;
                            <tr>
                                <th scope="row">@nr</th>
                                <td> @i.name</td>
                                <td>
                                    <input type="button" @onclick="@(() => Remove(i))" class="btn btn-link" value="X" />
                                </td>

                            </tr>
                            nr++;
                        }
                    </tbody>
                </table>
            }
        </div>
        <div class="form-group row">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Afati i aplikimit</label>
            <div class="col-sm-10">
                <input type="date" class="form-control" @bind-value="requestDto.appReviewDate">
            </div>
        </div>
        <button @onclick="CreateNew" class="btn btn-primary">Shto</button>
    </EditForm>
</RadzenCard>

@code {
    private ApplicationRequestDto requestDto = new ApplicationRequestDto();

    BlazoredModalInstance ModalInstance { get; set; }
    private string FileName = "Choose file...";
    private List<UsersDto> users = new();
    private List<IBrowserFile> loadedFiles = new();
    private List<DocumentDto> documentDtos = new();
    private List<DocumentDto> documentToShow = new();
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 5;

    protected override async Task OnInitializedAsync()
    {
        users = await _userService.GetUsersByRoleAsync("menaxher");
    }
    private void AddDocument()
    {
        documentToShow = documentDtos;
    }

    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        loadedFiles.Clear();
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                var buffers = new byte[file.Size];
                await file.OpenReadStream().ReadAsync(buffers);
                string image = Convert.ToBase64String(buffers);
                FileName = file.Name;
                documentDtos.Add(new()
                {
                    name = file.Name,
                    extention = file.ContentType,
                    base64 = image,
                    bytes = buffers
                });
                loadedFiles.Add(file);
            }
            catch (Exception ex)
            {

            }
        }

    }

    async void CreateNew()
    {
        requestDto.documentDtos = documentDtos;
        requestDto.institution = new InstitutionDto() { id = 1 };
        requestDto.type = new TypeDto() { id = 1 };
        var post = await _appService.PostApplicationAsync(requestDto);

        if (post)
        {

            toastService.ShowSuccess("U ruajt me sukses");
            _navmanager.NavigateTo("/dashboard");
        }
        else
        {
            toastService.ShowError("Aplikimi nuk u ruajt");
        }
    }
    IEnumerable<InstitutionDto> customCustomersData;
    int customCustomersDataVirtualizationCount;
    IEnumerable<InstitutionDto> customCustomersDataVirtualization;

    async void GetUsers(LoadDataArgs args)
    {
        users = await _userService.GetUsersByRoleAsync("menaxher");
    }

    private void Remove(DocumentDto index)
    {
        documentDtos.Remove(index);
        documentToShow.Remove(index);
    }
}
